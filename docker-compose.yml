version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: appointment_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strongpassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d appointment_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis-init.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service (Spring Boot)
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appointment_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-strongpassword}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  # Booking Service (Go)
  booking-service:
    build:
      context: ./backend/booking-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_USER: admin
      DB_PASSWORD: ${DB_PASSWORD:-strongpassword}
      DB_NAME: appointment_db
      REDIS_URL: redis:6379
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Payment Service (Spring Boot)
  payment-service:
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appointment_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-strongpassword}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy

  # Notification Service (Go)
  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    environment:
      REDIS_URL: redis:6379
      FIREBASE_CREDENTIALS: ${FIREBASE_CREDENTIALS}
    ports:
      - "8083:8083"
    depends_on:
      redis:
        condition: service_healthy

  # Admin Frontend (React)
  admin-frontend:
    build:
      context: ./frontend/admin-portal
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080
    depends_on:
      - auth-service
      - booking-service

  # API Gateway (NGINX)
  gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - booking-service
      - payment-service
      - notification-service

volumes:
  postgres_data:
  redis_data: 